# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: '3'

output: prefixed

tasks:
    test:
        desc: "Run tests and watch files for changes"
        cmds:
            - go install gotest.tools/gotestsum@latest
            - gotestsum -f testname -- -v -count=1 ./...
            - gotestsum -f testname --watch  -- -v -count=1 ./...
    bench:
        desc: "Run benchmarks and watch files for changes"
        cmds:
            - go install gotest.tools/gotestsum@latest
            - gotestsum -f standard-verbose -- -v -count=1 -bench=. -benchmem ./...
            - gotestsum -f standard-verbose --watch  -- -v -count=1 -bench=. -benchmem ./...
    bench-5s:
        desc: "Run benchmarks and watch files for changes"
        cmds:
            - go install gotest.tools/gotestsum@latest
            - gotestsum -f standard-verbose -- -v -count=1 -bench=. -benchmem -benchtime 5s ./...
            - gotestsum -f standard-verbose --watch  -- -v -count=1 -bench=. -benchmem -benchtime 5s ./...
    run-test:
        desc: "Run tests once"
        cmds:
            - go install gotest.tools/gotestsum@latest
            - gotestsum -f testname -- -v -count=1 ./...
    fmt:
        desc: "Format all files"
        cmds:
            - go fmt -x ./...
    fix:
        desc: "Fix all files"
        cmds:
            - go fix ./...
    vet:
        desc: "Analyze all files"
        cmds:
            - go vet ./...
    auto:
        desc: "Run on change"
        sources:
            - ./**/*.go
        generates:
            - ./**/*.go
        watch: true
        deps:
            - run-test
            - fmt
            - fix
            - vet
    profile:
        desc: "Profile specific test (run task profile -- ./testfile_test.go)"
        cmds:
            - cmd: mkdir ./.profile
              ignore_error: true
            - go test -cpuprofile ./.profile/cpu.pprof -memprofile ./.profile/mem.pprof -blockprofile ./.profile/block.pprof -coverprofile ./.profile/cover.pprof -mutexprofile ./.profile/mutex.pprof {{.CLI_ARGS}}
    pprof-cpu:
        desc: "Run pprof on profiled CPU data"
        prefix: "CPU"
        internal: true
        cmds:
            - go tool pprof -http=":" -no_browser ./.profile/cpu.pprof
    pprof-mem:
        desc: "Run pprof on profiled Memory data"
        prefix: "MEM"
        internal: true
        cmds:
            - go tool pprof -http=":" -no_browser ./.profile/mem.pprof
    pprof-block:
        desc: "Run pprof on profiled Go Routines block data"
        prefix: "BLOCK"
        internal: true
        cmds:
            - go tool pprof -http=":" -no_browser ./.profile/block.pprof
    pprof-cover:
        desc: "Run pprof on profiled Coverage data"
        prefix: "COVER"
        internal: true
        cmds:
            - cmd: go tool pprof -http=":" -no_browser ./.profile/cover.pprof
              ignore_error: true
    pprof-mutex:
        desc: "Run pprof on profiled Mutex data"
        prefix: "MUTEX"
        internal: true
        cmds:
            - go tool pprof -http=":" -no_browser ./.profile/mutex.pprof
    pprof:
        desc: "Run pprof on profiled data"
        deps:
            - pprof-cpu
            - pprof-mem
            - pprof-block
            - pprof-cover
            - pprof-mutex
